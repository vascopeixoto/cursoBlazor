@page "/bookings/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Bookings</h3>

<hr />
<br />

<a href="/bookings/create/" class="btn btn-secondary"><span class="oi oi-plus"></span> Create New Booking</a>

@if (Bookings == null)
{
    <div class="alert alert-info">Loading Bookings...</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Customer Tax Id</th>
                <th>Date</th>
                <th>Duration in days</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in Bookings)
            {
                <tr>
                    <td>@booking.Customer.TaxId</td>
                    <td>@booking.DateCreated.Date.ToString("dd MM yyyy")</td>
                    <td>
                        @(booking.DateIn != null ? (booking.DateIn.Value - booking.DateOut).TotalDays.ToString() : "To Be Determinated")
                    </td>
                    <td>
                        <a href="/bookings/view/@booking.Id" class="btn btn-primary"><span class="oi oi-book"></span></a>

                        <a href="/bookings/edit/@booking.Id" class="btn btn-warning"><span class="oi oi-pencil"></span></a>

                        <button class="btn btn-danger" @onclick="@(()=>Delete(booking.Id))"><span class="oi oi-delete"></span></button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Booking> Bookings;

    protected async override Task OnInitializedAsync()
    {
        Bookings = await _client.GetFromJsonAsync<List<Booking>>($"{Endpoints.BookingsEndpoint}");
    }

    async Task Delete(int bookingId)
    {
        var booking = Bookings.First(q => q.Id == bookingId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {booking.Customer.EmailAddress} Booking?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.BookingsEndpoint}{bookingId}");
            await OnInitializedAsync();
        }

    }
}
